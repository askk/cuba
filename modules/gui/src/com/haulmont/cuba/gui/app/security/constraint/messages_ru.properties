#
# Copyright (c) 2008-2016 Haulmont.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
#

caption=Ограничение для группы '%s'

entityName=Имя сущности
joinClause=Оператор Join
whereClause=Оператор Where
testConstraint = Проверить ограничение

joinClauseHelp=Значение данного поля добавляется в выражение "from" запроса. Оно должно начинаться с запятой или слов "join" или "left join".<br>\
  В качестве алиаса извлекаемой сущности необходимо использовать строку {E}. При выполнении запросов она будет заменена на реальный алиас, заданный в запросе.<br><br>\
  Например:<br>\
  <code>join {E}.seller s</code>

whereClauseHelp=Значение данного поля добавляется в выражение "where" запроса по условию "and" (И). Само слово "where" писать не нужно, оно будет добавлено автоматически, даже если исходный запрос его не содержал.<br>\
  В качестве алиаса извлекаемой сущности необходимо использовать строку {E}. При выполнении запросов она будет заменена на реальный алиас, заданный в запросе.<br>\
  В параметрах JPQL можно использовать следующие предопределенные константы:<ul>\
  <li><code>session$userLogin</code> – имя учетной записи текущего пользователя (в случае замещения − имя учетной записи замещаемого пользователя).</li>\
  <li><code>session$userId</code> – ID текущего пользователя (в случае замещения − ID замещаемого пользователя).</li>\
  <li><code>session$userGroupId</code> – ID группы текущего пользователя (в случае замещения − ID группы замещаемого пользователя).</li>\
  <li><code>session$XYZ</code> – произвольный атрибут текущей пользовательской сессии, где XYZ − имя атрибута.</li></ul>\
  Например:<br>\
  <code>{E}.createdBy = :session$userLogin and s.code = 'abc'</code>
groovyScriptHelp=Здесь можно задать Groovy-скрипт с условием для данного типа сущностей и данного действия.\
  <br> В качестве ссылки на сущность нужно использовать алиас {E}.\
  <br> Скрипт должен определить, разрешена ли конкретная операция для данной сущности и вернуть true если разрешена или false если не разрешена.\
  <br>\
  <br> Например, <code>{E}.name <> 'Test'</code> отфильтрует все сущности с именем Test.\
  <br>\
  <br> В скрипт передается переменная <code>userSession</code> типа <code>UserSession</code>. Ее можно использовать для получения атрибутов текущей пользовательской сессии, например:\
  <br>\
  <br> <code>{E}.createdBy == userSession.user.login</code>
wizard=Мастер создания ограничений доступа
code=Код
type=Тип

notification.entityIsEmpty=Пожалуйста выберите имя сущности
notification.syntaxErrors=В операторах Where и Join обнаружены синтаксические ошибки:<br> %s
notification.runtimeError=При запуске результирующего запроса произошла ошибка.<br><br>%s
notification.scriptCompilationError=При компиляции скрипта Groovy произошла ошибка.<br><br>%s
notification.error=Ошибка
notification.success=Ограничение синтаксически корректно

predefinedGroupIsUnchangeable=Это предопределенная группа доступа. Доступен только просмотр.