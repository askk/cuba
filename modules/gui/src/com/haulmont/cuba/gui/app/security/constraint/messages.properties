#
# Copyright (c) 2008-2016 Haulmont.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
#

caption=Constraint for the '%s' group

entityName=Entity Name
joinClause=Join Clause
whereClause=Where Clause
groovyScript=Groovy script
testConstraint = Test Constraint

joinClauseHelp=A value of this field is added to the "from" query clause. It should begin with a comma, "join" or "left join".<br>\
  The {E} placeholder should be used as an alias of the entity being extracted. On execution of the query, it will be replaced with a real alias, specified in the query.<br><br>\
  For example:<br>\
  <code>join {E}.seller s</code>

whereClauseHelp=A value of this field is added to the "where" query clause using "and" condition. The "where" word is not needed, as it will be added automatically.<br>\
  The {E} placeholder should be used as an alias of the entity being extracted. On execution of the query, it will be replaced with a real alias, specified in the query.<br>\
  The following predefined constants can be used in JPQL parameters:<ul>\
  <li><code>session$userLogin</code> – login name of the current user (in case of substitution – the login name of the substituted user).</li>\
  <li><code>session$userId</code> – ID of the current user (in case of substitution – ID of the substituted user).</li>\
  <li><code>session$userGroupId</code> – group ID of the current user (in case of substitution − group ID of the substituted user).</li>\
  <li><code>session$XYZ</code> – an arbitrary attribute of the current user session, where XYZ is the attribute name.</li></ul>\
  For example:<br>\
  <code>{E}.createdBy = :session$userLogin and s.code = 'abc'</code>

groovyScriptHelp=Here you can set Groovy-script with a condition for the selected type of entity and selected operation type.\
  <br> The {E} placeholder should be used as an alias of the entity.\
  <br> The script should check whether the certain operation is available for the entity or not, and return true (if available) or false (if not available).\
  <br>\
  <br> For example, <code>{E}.name <> 'Test'</code> will deny the action for any entity with name "Test".\
  <br>\
  <br>The <code>userSession</code> variable of the <code>UserSession</code> type is passed to the script. So you can use it to get attributes of the current user session, for example:\
  <br>\
  <br> <code>{E}.createdBy == userSession.user.login</code>
wizard=Constraint Wizard
code=Code
type=Type

notification.entityIsEmpty=Please select entity name
notification.syntaxErrors=Syntax errors found while parsing 'where' and 'join' clauses:<br> %s
notification.runtimeError=An error occurred while running resulting query.<br><br>%s
notification.scriptCompilationError=An error occurred while compiling Groovy script.<br><br>%s
notification.error=Error
notification.success=The constraint is syntactically correct

predefinedGroupIsUnchangeable=This is a predefined access group. Access is read only.
